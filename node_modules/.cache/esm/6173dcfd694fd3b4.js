let bodyParser,mongoose,express,methodOverride,flash,passport,localStrategy,passportLocalMongoose,SeedDB,campgroundRoutes,commentsRoutes,authRoutes,user;_694‍.w("body-parser",[["default",["bodyParser"],function(v){bodyParser=v}]]);_694‍.w("mongoose",[["default",["mongoose"],function(v){mongoose=v}]]);_694‍.w("express",[["default",["express"],function(v){express=v}]]);_694‍.w("method-override",[["default",["methodOverride"],function(v){methodOverride=v}]]);_694‍.w("connect-flash",[["default",["flash"],function(v){flash=v}]]);_694‍.w("passport",[["default",["passport"],function(v){passport=v}]]);_694‍.w("passport-local",[["default",["localStrategy"],function(v){localStrategy=v}]]);_694‍.w("passport-local-mongoose",[["default",["passportLocalMongoose"],function(v){passportLocalMongoose=v}]]);_694‍.w("./seeds",[["default",["SeedDB"],function(v){SeedDB=v}]]);_694‍.w("./routes/campgrounds",[["default",["campgroundRoutes"],function(v){campgroundRoutes=v}]]);_694‍.w("./routes/comments",[["default",["commentsRoutes"],function(v){commentsRoutes=v}]]);_694‍.w("./routes/auth",[["default",["authRoutes"],function(v){authRoutes=v}]]);_694‍.w("./views/models/user",[["default",["user"],function(v){user=v}]]);// Node.js body parsing middleware

// Mongoose

const dbRoute = 'mongodb+srv://enkienki:Rmn2010%2a@cluster0-wluuq.mongodb.net/yelpCamp?retryWrites=true&w=majority'
// Express

const app = express(),
port = 3000









//=============================
// Seeding the DataBase with "fake camps" and "fake comments"

//SeedDB()





//=============================
// APP CONFIG
// mongoose
mongoose.connect(dbRoute, { useNewUrlParser: true })
let db = mongoose.connection
db.once('open', () => console.log('connected to database'))
// body parser
app.use(bodyParser.urlencoded({ extended: true }))
// used to route the app.css to public folder
app.use(express.static('public'))
// allow to not use the extension .ejs after file names
app.set('view engine', 'ejs')
//PASSPORT CONFIG
app.use(require('express-session')({
    secret: "wathever make you feel ok",
    resave: false,
    saveUninitialized: false,
}))
app.use(passport.initialize())
app.use(passport.session())
passport.use(new localStrategy(user.authenticate()))
passport.serializeUser(user.serializeUser())
passport.deserializeUser(user.deserializeUser())

app.use(methodOverride('_method'))

app.use(flash())

// save the username of user in currentUser to display targeted content and add it as a middleware in every routes
app.use((req, res, next) =>{
    res.locals.currentUser = req.user
    res.locals.error = req.flash("error")
    res.locals.success = req.flash("success")
    next()
})

app.use(authRoutes)
app.use('/campgrounds/:id/comments', commentsRoutes)
app.use('/campgrounds', campgroundRoutes)

//================================
//MODELS


//================================
app.listen(port, () => console.log(`Express listen on ${port}`))