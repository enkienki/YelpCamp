let bodyParser,mongoose,express,passport,localStrategy,passportLocalMongoose,commentsRouter,campgroundsRouter,indexRouter,SeedDB,Campground,Comment,user;_aab‍.w("body-parser",[["default",["bodyParser"],function(v){bodyParser=v}]]);_aab‍.w("mongoose",[["default",["mongoose"],function(v){mongoose=v}]]);_aab‍.w("express",[["default",["express"],function(v){express=v}]]);_aab‍.w("passport",[["default",["passport"],function(v){passport=v}]]);_aab‍.w("passport-local",[["default",["localStrategy"],function(v){localStrategy=v}]]);_aab‍.w("passport-local-mongoose",[["default",["passportLocalMongoose"],function(v){passportLocalMongoose=v}]]);_aab‍.w("./Routes/comments",[["default",["commentsRouter"],function(v){commentsRouter=v}]]);_aab‍.w("./Routes/campgrounds",[["default",["campgroundsRouter"],function(v){campgroundsRouter=v}]]);_aab‍.w("./Routes/index",[["default",["indexRouter"],function(v){indexRouter=v}]]);_aab‍.w("./seeds",[["default",["SeedDB"],function(v){SeedDB=v}]]);_aab‍.w("./views/models/campground",[["default",["Campground"],function(v){Campground=v}]]);_aab‍.w("./views/models/comment",[["default",["Comment"],function(v){Comment=v}]]);_aab‍.w("./views/models/user",[["default",["user"],function(v){user=v}]]);// Node.js body parsing middleware

// Mongoose

const dbRoute = 'mongodb+srv://enkienki:Rmn2010%2a@cluster0-wluuq.mongodb.net/yelpCamp?retryWrites=true&w=majority'
// Express

const app = express(),
port = 3000









//=============================
// Seeding the DataBase with "fake camps" and "fake comments"

//SeedDB()

//=============================
// APP CONFIG
// mongoose
mongoose.connect(dbRoute, { useNewUrlParser: true })
let db = mongoose.connection
db.once('open', () => console.log('connected to database'))
// body parser
app.use(bodyParser.urlencoded({ extended: true }))
// used to route the app.css to public folder
app.use(express.static('public'))
// allow to not use the extension .ejs after file names
app.set('view engine', 'ejs')
//PASSPORT CONFIG
app.use(require('express-session')({
    secret: "wathever make you feel ok",
    resave: false,
    saveUninitialized: false,
}))
app.use(passport.initialize())
app.use(passport.session())
passport.use(new localStrategy(user.authenticate()))
passport.serializeUser(user.serializeUser())
passport.deserializeUser(user.deserializeUser())

// save the username of user in currentUser to display targeted content and add it as a middleware in every routes
app.use((req, res, next) =>{
    res.locals.currentUser = req.user
    next()
})

app.use(commentsRouter)
app.use('/campgrounds', campgroundsRouter)
app.use('/campgrounds/:id/comments', indexRouter)

//================================
//MODELS




//================================
app.listen(port, () => console.log(`Express listen on ${port}`))